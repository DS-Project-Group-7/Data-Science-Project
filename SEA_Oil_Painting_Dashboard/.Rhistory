PCX <- prcomp(X, retx = TRUE)
lambda <- PCX$sdev^2
gamma <- PCX$rotation
fracvar <- lambda/sum(lambda)
qplot(fracvar)
library(ggplot2)
wheat <- read.csv("Wheat data.txt", sep = "", header = F)
X <- scale(wheat[, -c(8)], scale = FALSE)
PCX <- prcomp(X, retx = TRUE)
lambda <- PCX$sdev^2
gamma <- PCX$rotation
fracvar <- lambda/sum(lambda)
qplot(fracvar) + geom_line()
library(ggplot2)
wheat <- read.csv("Wheat data.txt", sep = "", header = F)
X <- scale(wheat[, -c(8)], scale = FALSE)
PCX <- prcomp(X, retx = TRUE)
lambda <- PCX$sdev^2
gamma <- PCX$rotation
fracvar <- lambda/sum(lambda)
fracvar
library(ggplot2)
wheat <- read.csv("Wheat data.txt", sep = "", header = F)
X <- (wheat[, -c(8)]
PCX <- prcomp(X, retx = TRUE)
library(ggplot2)
wheat <- read.csv("Wheat data.txt", sep = "", header = F)
X <- wheat[, -c(8)]
PCX <- prcomp(X, retx = TRUE)
lambda <- PCX$sdev^2
gamma <- PCX$rotation
fracvar <- lambda/sum(lambda)
fracvar
library(ggplot2)
wheat <- read.csv("Wheat data.txt", sep = "", header = F)
X <- wheat[, -c(8)]
PCX <- prcomp(X, retx = TRUE)
lambda <- PCX$sdev^2
gamma <- PCX$rotation
fracvar <- lambda/sum(lambda)
qplot(fracvar) + geom_line()
library(ggplot2)
wheat <- read.csv("Wheat data.txt", sep = "", header = F)
X <- wheat[, -c(8)]
PCX <- prcomp(X, retx = TRUE)
lambda <- PCX$sdev^2
gamma <- PCX$rotation
fracvar <- lambda/sum(lambda)
screeplot(PCX)
library(ggplot2)
library(factoextra)
wheat <- read.csv("Wheat data.txt", sep = "", header = F)
X <- wheat[, -c(8)]
PCX <- prcomp(X, retx = TRUE)
lambda <- PCX$sdev^2
gamma <- PCX$rotation
fracvar <- lambda/sum(lambda)
screeplot(PCX)
library(ggplot2)
library(factoextra)
wheat <- read.csv("Wheat data.txt", sep = "", header = F)
X <- wheat[, -c(8)]
PCX <- prcomp(X, retx = TRUE)
lambda <- PCX$sdev^2
gamma <- PCX$rotation
fracvar <- lambda/sum(lambda)
screeplot(PCX)
library(ggplot2)
library(factoextra)
wheat <- read.csv("Wheat data.txt", sep = "", header = F)
X <- wheat[, -c(8)]
PCX <- prcomp(X, retx = TRUE)
lambda <- PCX$sdev^2
gamma <- PCX$rotation
fracvar <- lambda/sum(lambda)
fviz_eig(PCX)
library(ggplot2)
library(factoextra)
wheat <- read.csv("Wheat data.txt", sep = "", header = F)
X <- wheat[, -c(8)]
PCX <- prcomp(X, retx = TRUE)
lambda <- PCX$sdev^2
gamma <- PCX$rotation
fracvar <- lambda/sum(lambda)
fviz_eig(PCX)
suppressWarnings(library(factoextra))
wheat <- read.csv("Wheat data.txt", sep = "", header = F)
X <- wheat[, -c(8)]
PCX <- prcomp(X, retx = TRUE)
lambda <- PCX$sdev^2
gamma <- PCX$rotation
fracvar <- lambda/sum(lambda)
fviz_eig(PCX)
knitr::opts_chunk$set(echo = TRUE)
wheat <- read.csv("Wheat data.txt", sep = "", header = F)
X <- scale(wheat[, -c(8)], scale = FALSE)
PCX <- prcomp(X, retx = TRUE)
(lambda <- PCX$sdev^2)
(gamma <- PCX$rotation)
(fracvar <- lambda/sum(lambda))
(cumuprop <- cumsum(lambda)/sum(lambda))
screeplot(PCX, type = "line")
plot(x = PCX$x[,1], y = PCX$x[,2], col = wheat$V8, pch=5)
legend(-3, 4, horiz = TRUE, unique(wheat$V8), col=1:length(wheat$V8), pch=5)
corr_matrix <- matrix(0, 7, 7)
for (j in 1:7) {
for (k in 1:7) {
corr_matrix[j, k] <- (gamma[j, k] * lambda[k]) / sqrt(cov(X)[j, j] * lambda[k])
}
}
library(plotrix)
radius <- 1
plot(x = corr_matrix[,1], y = corr_matrix[,2], xlim = c(-2, 2), ylim = c(-1, 1))
draw.circle(0, 0, 1)
arrows(0, 0, )
arrows(0, 0, corr_matrix[1, 1], corr_matrix[1, 2])
library(plotrix)
radius <- 1
plot(x = corr_matrix[,1], y = corr_matrix[,2], xlim = c(-2, 2), ylim = c(-1, 1))
arrows(0, 0, corr_matrix[1, 1], corr_matrix[1, 2])
draw.circle(0, 0, 1)
library(plotrix)
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1))
arrows(0, 0, corr_matrix[1, 1], corr_matrix[1, 2])
draw.circle(0, 0, 1)
library(plotrix)
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1))
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
}
draw.circle(0, 0, 1)
shiny::runApp('Desktop/app')
knitr::opts_chunk$set(echo = TRUE)
wheat <- read.csv("Wheat data.txt", sep = "", header = F)
X <- scale(wheat[, -c(8)], scale = FALSE)
PCX <- prcomp(X, retx = TRUE)
(lambda <- PCX$sdev^2)
(gamma <- PCX$rotation)
(fracvar <- lambda/sum(lambda))
(cumuprop <- cumsum(lambda)/sum(lambda))
screeplot(PCX, type = "line")
plot(x = PCX$x[,1], y = PCX$x[,2], col = wheat$V8, pch=5)
legend(-3, 4, horiz = TRUE, unique(wheat$V8), col=1:length(wheat$V8), pch=5)
corr_matrix <- matrix(0, 7, 7)
for (j in 1:7) {
for (k in 1:7) {
corr_matrix[j, k] <- (gamma[j, k] * lambda[k]) / sqrt(cov(X)[j, j] * lambda[k])
}
}
library(plotrix)
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1))
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1], corr_matrix[i, 2], paste("X", as.character(i)))
}
draw.circle(0, 0, 1)
arrows(0, 0, corr_matrix[1, 1], corr_matrix[1, 2])
library(plotrix)
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1))
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] + 0.5, corr_matrix[i, 2] + 0.5, paste("X", as.character(i)))
}
draw.circle(0, 0, 1)
library(plotrix)
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1))
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1], corr_matrix[i, 2], paste("X", as.character(i)))
}
draw.circle(0, 0, 1)
library(plotrix)
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1))
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] + sign(corr_matrix[i, 1]) * 0.1, corr_matrix[i, 2], paste("X", as.character(i)))
}
draw.circle(0, 0, 1)
library(plotrix)
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1))
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] + sign(corr_matrix[i, 1]) * 0.1,
corr_matrix[i, 2] + sign(corr_matrix[i, 1]) * 0.1,
paste("X", as.character(i)))
}
draw.circle(0, 0, 1)
wheat <- read.csv("Wheat data.txt", sep = "", header = F)
X <- wheat[, -c(8)]
PCX <- prcomp(X, retx = TRUE)
lambda <- PCX$sdev^2
gamma <- PCX$rotation
fracvar = lambda/sum(lambda)
fracvar
cumsum(lambda)/sum(lambda)
screeplot(PCX, type='lines')
gamma
colMeans(X)
n = nrow(X)
X <- as.matrix(X)
PCs <- (X-matrix(rep(1,n), nrow=n)%*%colMeans(X))%*%gamma
plot(PCs[,1],PCs[,2], col=wheat$V8, xlab="PC1",ylab="PC2")
legend(-7,4,unique(wheat$V8),col=1:length(wheat$V8),pch=1)
Y <- PCX$x
# compute the covariance between Xi and Yi
Cov_XY <- gamma%*%diag(lambda)
# use the formula for correlation inn Week 4 Slide 7
Corr <- matrix(0, nrow=7, ncol=7)
for (j in 1:7){
for (k in 1:7){
Corr[j,k] <- gamma[j,k]*sqrt(lambda[k])/sqrt(diag(cov(X))[j])
}
}
Corr
# data frame with arrows coordinates
arrows <- data.frame(x1 = c(0, 0, 0, 0, 0, 0, 0),
y1 = c(0, 0, 0, 0, 0, 0, 0),
x2 = Corr[,1],
y2 = Corr[,2])
# function to create a circle
circle <- function(center = c(0, 0), npoints = 100) {
r  <- 1
tt <- seq(0, 2 * pi, length = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[1] + r * sin(tt)
return(data.frame(x = xx, y = yy))
}
corcir <- circle(c(0, 0), npoints = 100)
plot(corcir, type = "l", xlab = "PC1", ylab = "PC2",
main = "correlations between the Xj's and PC1 and PC2",
xlim = c(-2, 2))
for (i in 1:7) {
arrows(arrows[i, 1], arrows[i, 2], arrows[i, 3], arrows[i, 4], angle = 20)
text(arrows[i, 3] + sign(arrows[i, 3]) * 0.1,
arrows[i, 4] + sign(arrows[i, 3]) * 0.1,
colnames(X)[i])
}
Corr[,1]^2+Corr[,2]^2
## Pairs plot
class <- wheat_data$V8
library(plotrix)
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1))
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] + sign(corr_matrix[i, 1]) * 0.1,
corr_matrix[i, 2],
paste("X", as.character(i)))
}
draw.circle(0, 0, 1)
library(plotrix)
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1))
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] + sign(corr_matrix[i, 1]) * 0.1,
corr_matrix[i, 2],
paste("X", as.character(i)))
}
radius <- 1
theta <- seq(0, 2 * pi, length = 200)
lines(x = radius * cos(theta), y = radius * sin(theta))
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1))
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] + sign(corr_matrix[i, 1]) * 0.2,
corr_matrix[i, 2],
paste("X", as.character(i)))
}
radius <- 1
theta <- seq(0, 2 * pi, length = 200)
lines(x = radius * cos(theta), y = radius * sin(theta))
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1))
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] + sign(corr_matrix[i, 1]) * 0.1,
corr_matrix[i, 2],
paste("X", as.character(i)))
}
radius <- 1
theta <- seq(0, 2 * pi, length = 200)
lines(x = radius * cos(theta), y = radius * sin(theta))
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1))
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] * 0.1,
corr_matrix[i, 2],
paste("X", as.character(i)))
}
radius <- 1
theta <- seq(0, 2 * pi, length = 200)
lines(x = radius * cos(theta), y = radius * sin(theta))
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1))
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] +  0.1,
corr_matrix[i, 2],
paste("X", as.character(i)))
}
radius <- 1
theta <- seq(0, 2 * pi, length = 200)
lines(x = radius * cos(theta), y = radius * sin(theta))
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1))
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] - 0.1,
corr_matrix[i, 2],
paste("X", as.character(i)))
}
radius <- 1
theta <- seq(0, 2 * pi, length = 200)
lines(x = radius * cos(theta), y = radius * sin(theta))
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1))
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] - 0.2,
corr_matrix[i, 2],
paste("X", as.character(i)))
}
radius <- 1
theta <- seq(0, 2 * pi, length = 200)
lines(x = radius * cos(theta), y = radius * sin(theta))
radius <- 1
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] - 0.2,
corr_matrix[i, 2],
paste("X", as.character(i)))
}
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1))
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] - 0.2,
corr_matrix[i, 2],
paste("X", as.character(i)))
}
radius <- 1
theta <- seq(0, 2 * pi, length = 200)
lines(x = radius * cos(theta), y = radius * sin(theta))
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1),
main = "correlations between the Xj's and PC1 and PC2")
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] - 0.2,
corr_matrix[i, 2],
paste("X", as.character(i)))
}
radius <- 1
theta <- seq(0, 2 * pi, length = 200)
lines(x = radius * cos(theta), y = radius * sin(theta))
radius <- 1
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1), xlab = 'PC1', ylab = 'PC2',
main = "correlations between the Xj's and PC1 and PC2")
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] - 0.2,
corr_matrix[i, 2],
paste("X", as.character(i)))
}
radius <- 1
theta <- seq(0, 2 * pi, length = 200)
lines(x = radius * cos(theta), y = radius * sin(theta))
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1), xlab = 'PC1', ylab = 'PC2',
main = "correlations between the Xj's and PC1 and PC2")
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] - 0.2,
corr_matrix[i, 2],
paste("X", as.character(i)))
}
radius <- 1
theta <- seq(0, 2 * pi, length = 200)
lines(x = radius * cos(theta), y = radius * sin(theta))
corr_matrix <- matrix(0, 7, 7)
for (j in 1:7) {
for (k in 1:7) {
corr_matrix[j, k] <- (gamma[j, k] * lambda[k]) / sqrt(cov(X)[j, j] * lambda[k])
}
}
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1), xlab = 'PC1', ylab = 'PC2',
main = "correlations between the Xj's and PC1 and PC2")
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] - 0.2,
corr_matrix[i, 2],
paste("X", as.character(i)))
}
radius <- 1
theta <- seq(0, 2 * pi, length = 200)
lines(x = radius * cos(theta), y = radius * sin(theta))
corr_matrix <- matrix(0, 7, 7)
for (j in 1:7) {
for (k in 1:7) {
corr_matrix[j, k] <- (gamma[j, k] * lambda[k]) / sqrt(cov(X)[j, j] * lambda[k])
}
}
corr[, c(1, 2)]
corr_matrix <- matrix(0, 7, 7)
for (j in 1:7) {
for (k in 1:7) {
corr_matrix[j, k] <- (gamma[j, k] * lambda[k]) / sqrt(cov(X)[j, j] * lambda[k])
}
}
corr_matrix[, c(1, 2)]
wheat <- read.csv("Wheat data.txt", sep = "", header = F)
X <- wheat[, -c(8)]
PCX <- prcomp(X, retx = TRUE)
lambda <- PCX$sdev^2
gamma <- PCX$rotation
fracvar = lambda/sum(lambda)
fracvar
cumsum(lambda)/sum(lambda)
screeplot(PCX, type='lines')
gamma
colMeans(X)
n = nrow(X)
X <- as.matrix(X)
PCs <- (X-matrix(rep(1,n), nrow=n)%*%colMeans(X))%*%gamma
plot(PCs[,1],PCs[,2], col=wheat$V8, xlab="PC1",ylab="PC2")
legend(-7,4,unique(wheat$V8),col=1:length(wheat$V8),pch=1)
Y <- PCX$x
# compute the covariance between Xi and Yi
Cov_XY <- gamma%*%diag(lambda)
# use the formula for correlation inn Week 4 Slide 7
Corr <- matrix(0, nrow=7, ncol=7)
for (j in 1:7){
for (k in 1:7){
Corr[j,k] <- gamma[j,k]*sqrt(lambda[k])/sqrt(diag(cov(X))[j])
}
}
Corr
# data frame with arrows coordinates
arrows <- data.frame(x1 = c(0, 0, 0, 0, 0, 0, 0),
y1 = c(0, 0, 0, 0, 0, 0, 0),
x2 = Corr[,1],
y2 = Corr[,2])
# function to create a circle
circle <- function(center = c(0, 0), npoints = 100) {
r  <- 1
tt <- seq(0, 2 * pi, length = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[1] + r * sin(tt)
return(data.frame(x = xx, y = yy))
}
corcir <- circle(c(0, 0), npoints = 100)
plot(corcir, type = "l", xlab = "PC1", ylab = "PC2",
main = "correlations between the Xj's and PC1 and PC2",
xlim = c(-2, 2))
for (i in 1:7) {
arrows(arrows[i, 1], arrows[i, 2], arrows[i, 3], arrows[i, 4], angle = 20)
text(arrows[i, 3] + sign(arrows[i, 3]) * 0.1,
arrows[i, 4] + sign(arrows[i, 3]) * 0.1,
colnames(X)[i])
}
Corr[,1]^2+Corr[,2]^2
## Pairs plot
class <- wheat_data$V8
corr_matrix <- matrix(0, 7, 7)
for (j in 1:7) {
for (k in 1:7) {
corr_matrix[j, k] <- (gamma[j, k] * lambda[k]) / sqrt(cov(X)[j, j] * lambda[k])
}
}
corr_matrix[, c(1, 2)]
corr_matrix[,1]^2 + corr_matrix[,2]^2
## Pairs plot
class <- wheat$V8
pairs(X, col = c(1,2,3)[class])
plot(x = PCX$x[,1], y = PCX$x[,2], col = wheat$V8, pch=5, xlab = 'PC1', ylab = 'PC2')
legend(-3, 4, horiz = TRUE, unique(wheat$V8), col=1:length(wheat$V8), pch=5)
plot(x = 0, y = 0, xlim = c(-1.5, 1.5), ylim = c(-1, 1), xlab = 'PC1', ylab = 'PC2',
main = "correlations between the Xj's and PC1 and PC2")
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] - 0.2,
corr_matrix[i, 2],
paste("X", as.character(i)))
}
radius <- 1
theta <- seq(0, 2 * pi, length = 200)
lines(x = radius * cos(theta), y = radius * sin(theta))
plot(x = 0, y = 0, xlim = c(-2, 2), ylim = c(-1, 1), xlab = 'PC1', ylab = 'PC2',
main = "correlations between the Xj's and PC1 and PC2")
for (i in 1:7) {
arrows(0, 0, corr_matrix[i, 1], corr_matrix[i, 2])
text(corr_matrix[i, 1] - 0.2,
corr_matrix[i, 2],
paste("X", as.character(i)))
}
radius <- 1
theta <- seq(0, 2 * pi, length = 200)
lines(x = radius * cos(theta), y = radius * sin(theta))
plot(x = PCX$x[,1], y = PCX$x[,2], col = wheat$V8, pch=5, xlab = 'PC1', ylab = 'PC2')
legend(-3, 4, horiz = TRUE, unique(wheat$V8), col=1:length(wheat$V8), pch=5)
class <- wheat$V8
pairs(X, col = c(1,2,3)[class])
shiny::runApp('Desktop/Data-Science-Project/SEA_Oil_Painting_Dashboard')
